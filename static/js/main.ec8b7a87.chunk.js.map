{"version":3,"sources":["Square.js","Board.js","Game.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","y","Math","floor","this","squares","x","renderSquare","React","Component","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"wOAaeA,MAXf,SAAgBC,GACZ,OACI,4BACIC,UAAU,SACVC,QAASF,EAAME,SAEdF,EAAMG,QCgCJC,E,2KAnCEC,GAAI,IAAD,OACNC,EAAIC,KAAKC,MAAMH,EAAE,GACvB,OACI,kBAAC,EAAD,CACIF,MAAOM,KAAKT,MAAMU,QAAQL,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,IAClCM,EAAGN,EAAE,EACLC,EAAGA,M,+BAMX,OACI,6BACI,yBAAKL,UAAU,aACVQ,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAEvB,yBAAKX,UAAU,aACVQ,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAEvB,yBAAKX,UAAU,aACVQ,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,S,GA7BnBC,IAAMC,WC4E1B,SAASC,EAAgBL,GAWvB,IAVE,IAAMM,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEJX,EAAI,EAAGA,EAAIW,EAAMC,OAAQZ,IAAK,CAAC,IAAD,cACjBW,EAAMX,GADW,GAC5Ba,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIV,EAAQQ,IAAMR,EAAQQ,KAAOR,EAAQS,IAAMT,EAAQQ,KAAOR,EAAQU,GAClE,OAAOV,EAAQQ,GAGvB,OAAO,KAGMG,M,kDAhGX,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAQ,CACTC,QAAS,CAAC,CACNb,QAASc,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPE,E,wDAWPtB,GACR,IAAMkB,EAAUd,KAAKa,MAAMC,QAAQK,MAAM,EAAGnB,KAAKa,MAAMI,WAAa,GAE9DhB,EADUa,EAAQA,EAAQN,OAAS,GACjBP,QAAQkB,QAC5Bb,EAAgBL,IAAYA,EAAQL,KAGxCK,EAAQL,GAAKI,KAAKa,MAAMK,QAAU,IAAM,IACxClB,KAAKoB,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACrBpB,QAASA,KAEbgB,WAAYH,EAAQN,OACpBU,SAAUlB,KAAKa,MAAMK,a,6BAItBI,GACHtB,KAAKoB,SAAS,CACVH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,+BAItB,IAeFC,EAfC,OACCT,EAAUd,KAAKa,MAAMC,QACrBU,EAAUV,EAAQd,KAAKa,MAAMI,YAC7BQ,EAASnB,EAAgBkB,EAAQvB,SAEjCyB,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,wBAAIE,IAAKF,GACL,4BAAQnC,QAAS,kBAAM,EAAKsC,OAAOH,KAAQC,OAWvD,OALIN,EADAE,EACS,WAAaA,EAEb,iBAAmBzB,KAAKa,MAAMK,QAAU,IAAM,KAIvD,yBAAK1B,UAAU,QACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CACIS,QAASuB,EAAQvB,QACjBR,QAAS,SAACG,GAAD,OAAO,EAAKoC,YAAYpC,OAGzC,yBAAKJ,UAAU,aACX,6BAAM+B,GACN,4BAAKG,S,GApENtB,IAAMC,WCGzB4B,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ec8b7a87.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props) {\n    return (\n        <button \n            className='square'\n            onClick={props.onClick}\n        >\n            {props.value}\n        </button>\n    );\n}\n\nexport default Square;","import React from 'react';\n\nimport Square from './Square';\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        const y = Math.floor(i/3);\n        return(\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n                x={i%3}\n                y={y}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='board-row'>\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className='board-row'>\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className='board-row'>\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board'\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move:\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div className='game'>\n                <div className='game-board'>\n                    <Board \n                        squares={current.squares}\n                        onClick={(i) => this.handleClick(i)}\n                    />\n                </div>\n                <div className='game-info'>\n                    <div>{status}</div>\n                    <ol>{moves}</ol>\n                </div>\n            </div>\n        );\n    }\n}\n\n// =======================================\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n      }\n  }\n  return null;\n}\n\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport Game from './Game';\n\nReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n);"],"sourceRoot":""}