{"version":3,"sources":["Square.js","Board.js","Game.js","TodoList.js","Page.js","index.js"],"names":["Square","props","className","onClick","value","Board","i","y","Math","floor","this","squares","x","renderSquare","React","Component","GameTitle","href","calculateWinner","lines","length","a","b","c","Game","state","history","Array","fill","stepNumber","xIsNext","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","TodoListBody","listTodo","row","index","TodoList","Page","ReactDOM","render","document","getElementById"],"mappings":"wOAaeA,MAXf,SAAgBC,GACZ,OACI,4BACIC,UAAU,SACVC,QAASF,EAAME,SAEdF,EAAMG,QCgCJC,E,2KAnCEC,GAAI,IAAD,OACNC,EAAIC,KAAKC,MAAMH,EAAE,GACvB,OACI,kBAAC,EAAD,CACIF,MAAOM,KAAKT,MAAMU,QAAQL,GAC1BH,QAAS,kBAAM,EAAKF,MAAME,QAAQG,IAClCM,EAAGN,EAAE,EACLC,EAAGA,M,+BAMX,OACI,6BACI,yBAAKL,UAAU,aACVQ,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAEvB,yBAAKX,UAAU,aACVQ,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,IAEvB,yBAAKX,UAAU,aACVQ,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,S,GA7BnBC,IAAMC,WCDpBC,EAAY,WACd,OAAO,mDAAwB,uBAAGC,KAAK,+BAAR,mBAqFnC,SAASC,EAAgBP,GAWvB,IAVE,IAAMQ,EAAQ,CACV,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEJb,EAAI,EAAGA,EAAIa,EAAMC,OAAQd,IAAK,CAAC,IAAD,cACjBa,EAAMb,GADW,GAC5Be,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIZ,EAAQU,IAAMV,EAAQU,KAAOV,EAAQW,IAAMX,EAAQU,KAAOV,EAAQY,GAClE,OAAOZ,EAAQU,GAGvB,OAAO,KAGMG,M,kDArGX,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IACDwB,MAAQ,CACTC,QAAS,CAAC,CACNf,QAASgB,MAAM,GAAGC,KAAK,QAE3BC,WAAY,EACZC,SAAS,GAPE,E,wDAWPxB,GACR,IAAMoB,EAAUhB,KAAKe,MAAMC,QAAQK,MAAM,EAAGrB,KAAKe,MAAMI,WAAa,GAE9DlB,EADUe,EAAQA,EAAQN,OAAS,GACjBT,QAAQoB,QAC5Bb,EAAgBP,IAAYA,EAAQL,KAGxCK,EAAQL,GAAKI,KAAKe,MAAMK,QAAU,IAAM,IACxCpB,KAAKsB,SAAS,CACVN,QAASA,EAAQO,OAAO,CAAC,CACrBtB,QAASA,KAEbkB,WAAYH,EAAQN,OACpBU,SAAUpB,KAAKe,MAAMK,a,6BAItBI,GACHxB,KAAKsB,SAAS,CACVH,WAAYK,EACZJ,QAAUI,EAAO,IAAO,M,+BAItB,IAeFC,EAfC,OACCT,EAAUhB,KAAKe,MAAMC,QACrBU,EAAUV,EAAQhB,KAAKe,MAAMI,YAC7BQ,EAASnB,EAAgBkB,EAAQzB,SAEjC2B,EAAQZ,EAAQa,KAAI,SAACL,EAAMM,GAC7B,IAAMC,EAAOD,EACT,eAAiBA,EACjB,mBACJ,OACI,wBAAIE,IAAKF,GACL,4BAAQrC,QAAS,kBAAM,EAAKwC,OAAOH,KAAQC,OAWvD,OALIN,EADAE,EACS,WAAaA,EAEb,iBAAmB3B,KAAKe,MAAMK,QAAU,IAAM,KAIvD,yBAAK5B,UAAU,QACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,aACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CACIS,QAASyB,EAAQzB,QACjBR,QAAS,SAACG,GAAD,OAAO,EAAKsC,YAAYtC,OAGzC,yBAAKJ,UAAU,aACX,6BAAMiC,GACN,4BAAKG,U,GAxEVxB,IAAMC,WCHnB8B,EAAe,SAAC5C,GAOpB,OANaA,EAAM6C,SAASP,KAAI,SAACQ,EAAKC,GACpC,OACE,wBAAIN,IAAKM,GAAQD,OA2BRE,EApBE,SAAChD,GAUhB,OACE,yBAAKC,UAAU,aACb,oCACA,4BACE,kBAAC,EAAD,CAAc4C,SAbH,CACf,wFACA,qDACA,iFACA,4FACA,sEACA,2ECPWI,EATF,WACX,OACE,yBAAKhD,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFNiD,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.9ea9fcaf.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Square(props) {\n    return (\n        <button \n            className='square'\n            onClick={props.onClick}\n        >\n            {props.value}\n        </button>\n    );\n}\n\nexport default Square;","import React from 'react';\n\nimport Square from './Square';\n\nclass Board extends React.Component {\n    renderSquare(i) {\n        const y = Math.floor(i/3);\n        return(\n            <Square\n                value={this.props.squares[i]}\n                onClick={() => this.props.onClick(i)}\n                x={i%3}\n                y={y}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                <div className='board-row'>\n                    {this.renderSquare(0)}\n                    {this.renderSquare(1)}\n                    {this.renderSquare(2)}\n                </div>\n                <div className='board-row'>\n                    {this.renderSquare(3)}\n                    {this.renderSquare(4)}\n                    {this.renderSquare(5)}\n                </div>\n                <div className='board-row'>\n                    {this.renderSquare(6)}\n                    {this.renderSquare(7)}\n                    {this.renderSquare(8)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board';\n\nconst GameTitle = () => {\n    return <h1>Tic Tac Toe made by <a href=\"https://github.com/zhongjis\">Zhongjie Shen</a></h1>;\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            history: [{\n                squares: Array(9).fill(null),\n            }],\n            stepNumber: 0,\n            xIsNext: true,\n        }\n    }\n\n    handleClick(i) {\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\n        const current = history[history.length - 1];\n        const squares = current.squares.slice();\n        if (calculateWinner(squares) || squares[i]) {\n            return;\n        }\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            history: history.concat([{\n                squares: squares,\n            }]),\n            stepNumber: history.length,\n            xIsNext: !this.state.xIsNext,\n        });\n    }\n\n    jumpTo(step) {\n        this.setState({\n            stepNumber: step,\n            xIsNext: (step % 2) === 0,\n        });\n    }\n\n    render() {\n        const history = this.state.history;\n        const current = history[this.state.stepNumber];\n        const winner = calculateWinner(current.squares);\n\n        const moves = history.map((step, move) => {\n            const desc = move ?\n                'Go to move #' + move:\n                'Go to game start';\n            return (\n                <li key={move}>\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\n                </li>\n            )\n        })\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n        }\n\n        return (\n            <div className='game'>\n                <div className='game-title'>\n                    <GameTitle />\n                </div>\n                <div className='game-body'>\n                    <div className='game-board'>\n                        <Board \n                            squares={current.squares}\n                            onClick={(i) => this.handleClick(i)}\n                        />\n                    </div>\n                    <div className='game-info'>\n                        <div>{status}</div>\n                        <ol>{moves}</ol>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// =======================================\n\nfunction calculateWinner(squares) {\n    const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n          return squares[a];\n      }\n  }\n  return null;\n}\n\nexport default Game;","import React from 'react';\n\n// const itemFinished = [];\n\nconst TodoListBody = (props) => {\n  const rows = props.listTodo.map((row, index) => {\n    return (\n      <li key={index}>{row}</li>\n    )\n  })\n\n  return rows;\n}\n\nconst TodoList = (props) => {\n  const listTodo = [\n    \"Display the location for each move in the format (col, row) in the move history list.\",\n    \"Bold the currently selected item in the move list.\",\n    \"Rewrite Board to use two loops to make the squares instead of hardcoding them.\",\n    \"Add a toggle button that lets you sort the moves in either ascending or descending order.\",\n    \"When someone wins, highlight the three squares that caused the win.\",\n    \"When no one wins, display a message about the result being a draw.\",\n  ];\n  \n  return (\n    <div className='todo-list'>\n      <h2>TODO</h2>\n      <ol>\n        <TodoListBody listTodo={listTodo} />\n      </ol>\n    </div>\n  );\n};\n\nexport default TodoList;","import React from 'react';\n\nimport Game from './Game';\nimport TodoList from'./TodoList';\n\nconst Page = () => {\n  return (\n    <div className='container'>\n      <Game />\n      <TodoList />\n    </div>\n  )\n}\n\nexport default Page;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport Page from './Page';\n\nReactDOM.render(\n    <Page />,\n    document.getElementById('root')\n);"],"sourceRoot":""}